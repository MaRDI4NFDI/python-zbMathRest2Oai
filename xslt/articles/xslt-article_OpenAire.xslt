<!-- XSLT code to transform the zbmath metadata acoording the metadata Scheme of Datacite
Made by Shiraz Malla Mohamad member of zbmath Team-->
<xsl:stylesheet version="1.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns="http://datacite.org/schema/kernel-4"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xsi:schemaLocation="http://datacite.org/schema/kernel-4
                https://schema.datacite.org/meta/kernel-4.1/metadata.xsd"
                exclude-result-prefixes="#default">
    <xsl:output method="xml" indent="yes"/>
    <xsl:template match="/">
            <resource xsi:schemaLocation="http://datacite.org/schema/kernel-4 http://schema.datacite.org/meta/kernel-4/metadata.xsd">
            <!-- Roots of the metadata -->

            <xsl:apply-templates select="root/zbmath_url"/>
                <alternateIdentifiers>
                    <xsl:apply-templates select="root/identifier"/>
                <xsl:apply-templates select="root/id"/>
                <xsl:apply-templates select="root/links"/>
                </alternateIdentifiers>
              <creators>
                <xsl:apply-templates select="root/contributors/authors"/>
              </creators>

                <xsl:apply-templates select="root/title"/>
                 <xsl:apply-templates select="root/source/series/publisher"/>
                <xsl:apply-templates select="root/year"/>
                <descriptions>
                <xsl:apply-templates select="root/editorial_contributions/text"/>
                </descriptions>
                 <subjects>
                <xsl:apply-templates select="root/msc"/>
                <xsl:apply-templates select="root/keywords"/>
            </subjects>
                <xsl:apply-templates select="root/datestamp"/>
                <xsl:apply-templates select="root/language/languages"/>
                <xsl:apply-templates select="root/document_type/description"/>
                <rightsList> <!-- this generates the copyrights and legal aspect wihtin the xslt -->
                <rights xml:lang="en"
                        schemeURI="https://api.zbmath.org/v1/"
                        rightsIdentifierScheme="zbMATH"
                        rightsIdentifier="CC-BY-SA 4.0"
                        rightsURI="https://creativecommons.org/licenses/by-sa/4.0/">
                    The zbMATH Open OAI-PMH API is subject to the Terms and Conditions for the zbMATH Open API Service of FIZ Karlsruhe – Leibniz-Institut für Informationsinfrastruktur GmbH.
Content generated by zbMATH Open, such as reviews, classifications, software, or author disambiguation data, are distributed under CC-BY-SA 4.0. This defines the license for the whole dataset, which also contains non-copyrighted bibliographic metadata and reference data derived from I4OC (CC0). Note that the API only provides a subset of the data in the zbMATH Open Web interface. In several cases, third-party information, such as abstracts, cannot be made available under a suitable license through the API. In those cases, we replaced the data with the string
"zbMATH Open Web Interface contents unavailable due to conflicting licenses."</rights>
            </rightsList>
                <formats>
                <format>XML</format>
                </formats>
                </resource>
        </xsl:template>

        <!-- the URL is the main Identifier for OpenAire-->
        <xsl:template match="zbmath_url">
        <Identifier IdentifierType="URL">
            <xsl:value-of select="."/>
        </Identifier>
       </xsl:template>
     <xsl:template match="authors">
        <creator>
            <creatorName nameType="Personal">
                <xsl:value-of select="name"/>
            </creatorName>
            <givenName>
                <xsl:value-of select="substring-before(name, ',')"/>
            </givenName>
            <familyName>
                <xsl:value-of select="substring-after(name, ', ')"/>
            </familyName>
            <nameIdentifier schemeURI="https://zbmath.org/" nameIdentifierScheme="zbMATH Author Code">
                <xsl:value-of select="codes"/>
            </nameIdentifier>
        </creator>
    </xsl:template>

     <xsl:template match="title">
            <!-- Transform titles into structured titles -->
        <titles>
            <title xml:lang="en">
                <xsl:value-of select="title"/>
            </title>
        </titles>
           </xsl:template>
 <!-- Template for processing publisher -->
            <xsl:template match="publisher">
            <publisher xml:lang="en">
            <xsl:value-of select="."/>
            </publisher>
            </xsl:template>
    <!-- Template for processing publication year -->
          <xsl:template match="year">
            <publicationYear>
             <xsl:value-of select="."/>
            </publicationYear>
            </xsl:template>
    <!-- Template for processing text node into description text with its subproperty -->
        <xsl:template match="text">
            <!-- Transformation of  description text -->
        <description  descriptionType="Abstract">

         <xsl:value-of select="normalize-space(.)"/>

        </description>
        </xsl:template>

     <xsl:template match="msc">
    <subject>
        <xsl:attribute name="subjectScheme">
            <xsl:value-of select="scheme"/>
        </xsl:attribute>
        <xsl:attribute name="classificationCode">
            <xsl:value-of select="code"/>
        </xsl:attribute>
        <xsl:value-of select="text"/>
    </subject>
</xsl:template>
<!-- Template for processing keywords it is also under the subject section with MSC'S
with its own subjectscheme -->

       <xsl:template match="keywords">
            <!-- Transformation of  keywords -->
        <subject subjectScheme="keyword">
            <xsl:value-of select="."/>
        </subject>
        </xsl:template>
<xsl:template match="datestamp">
    <dates>
      <date dateType="Issued">
        <!-- Extract just the date part (YYYY-MM-DD) from the datestamp -->
        <xsl:value-of select="substring-before(. , 'T')" />
      </date>
    </dates>
  </xsl:template>
    <xsl:template match="languages">
            <language>
             <xsl:value-of select="substring-before(. , 'l')" />
            </language>
            </xsl:template>
     <xsl:template match="description">
    <resourceType>
        <xsl:choose>
            <xsl:when test="contains(translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'article')">
                <xsl:attribute name="resourceTypeGeneral">Text/JournalArticle</xsl:attribute>
            </xsl:when>
            <xsl:when test="contains(translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), 'book')">
                <xsl:attribute name="resourceTypeGeneral">Text/Book</xsl:attribute>
            </xsl:when>
            <xsl:otherwise>
                <xsl:attribute name="resourceTypeGeneral">Text/Other</xsl:attribute>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="."/>
    </resourceType>
</xsl:template>
    </xsl:stylesheet>

